// Telegram Bot for Mini Shop
// This bot sends a web app button when users send /start command

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || "8299226351:AAGkOILSMB7PCquK3dKGQ8KvTufxJEYgp3Q"
const WEB_APP_URL = "https://shop.homeshop.uz"

class MiniShopBot {
  constructor(token) {
    this.token = token
    this.apiUrl = `https://api.telegram.org/bot${token}`
  }

  // Send HTTP request to Telegram API
  async sendRequest(method, data) {
    try {
      const response = await fetch(`${this.apiUrl}/${method}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      })
      return await response.json()
    } catch (error) {
      console.error("Error sending request:", error)
      return null
    }
  }

  // Send message with web app button
  async sendWebAppButton(chatId, language = "ru") {
    const messages = {
      uz: {
        text: `üè† *HomeShop Mini Ilovasiga Xush Kelibsiz!*

Bizning katalogimizda:
‚Ä¢ üè† Uy jihozlari va texnikalar
‚Ä¢ üß∏ Bolalar o'yinchoqlari
‚Ä¢ üç≥ Oshxona anjomlar
‚Ä¢ üì± Elektronika va gadjetlar
‚Ä¢ üë∂ Bolalar uchun mahsulotlar

Mahsulotlarni ko'rish va xarid qilish uchun pastdagi tugmani bosing!`,
        button: "üõçÔ∏è Do'konni ochish",
        menu: "üìã Menyu",
        contact: "üìû Aloqa",
        about: "‚ÑπÔ∏è Ma'lumot",
        language: "üåê Tilni o'zgartirish",
      },
      ru: {
        text: `üè† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HomeShop Mini App!*

–í –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ:
‚Ä¢ üè† –ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞
‚Ä¢ üß∏ –î–µ—Ç—Å–∫–∏–µ –∏–≥—Ä—É—à–∫–∏
‚Ä¢ üç≥ –ö—É—Ö–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏  
‚Ä¢ üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã
‚Ä¢ üë∂ –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã –∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫–∏!`,
        button: "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
        menu: "üìã –ú–µ–Ω—é",
        contact: "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã",
        about: "‚ÑπÔ∏è –û –Ω–∞—Å",
        language: "üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
      },
    }

    const message = messages[language] || messages.ru

    const keyboard = {
      inline_keyboard: [
        [
          {
            text: message.button,
            web_app: {
              url: WEB_APP_URL,
            },
          },
        ],
        [
          {
            text: message.menu,
            callback_data: "menu",
          },
          {
            text: message.contact,
            callback_data: "contact",
          },
        ],
        [
          {
            text: message.about,
            callback_data: "about",
          },
          {
            text: message.language,
            callback_data: "language",
          },
        ],
      ],
    }

    return await this.sendRequest("sendMessage", {
      chat_id: chatId,
      text: message.text,
      parse_mode: "Markdown",
      reply_markup: keyboard,
    })
  }

  // Send message with web app button
  async sendMenu(chatId, language = "ru") {
    const messages = {
      uz: {
        text: `üìã *Asosiy Menyu*

Quyidagi bo'limlardan birini tanlang:`,
        categories: "üè∑Ô∏è Kategoriyalar",
        popular: "‚≠ê Mashhur mahsulotlar",
        new: "üÜï Yangi mahsulotlar",
        discounts: "üî• Chegirmalar",
        back: "‚¨ÖÔ∏è Orqaga",
      },
      ru: {
        text: `üìã *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤:`,
        categories: "üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
        popular: "‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã",
        new: "üÜï –ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã",
        discounts: "üî• –°–∫–∏–¥–∫–∏",
        back: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
      },
    }

    const message = messages[language] || messages.ru

    const keyboard = {
      inline_keyboard: [
        [
          {
            text: message.categories,
            callback_data: "categories",
          },
          {
            text: message.popular,
            callback_data: "popular",
          },
        ],
        [
          {
            text: message.new,
            callback_data: "new_products",
          },
          {
            text: message.discounts,
            callback_data: "discounts",
          },
        ],
        [
          {
            text: message.back,
            callback_data: "back_to_main",
          },
        ],
      ],
    }

    return await this.sendRequest("sendMessage", {
      chat_id: chatId,
      text: message.text,
      parse_mode: "Markdown",
      reply_markup: keyboard,
    })
  }

  // Send message with web app button
  async sendLanguageMenu(chatId, language = "ru") {
    const messages = {
      uz: {
        text: `üåê *Tilni tanlang*

Qaysi tilda davom etishni xohlaysiz?`,
      },
      ru: {
        text: `üåê *–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫*

–ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`,
      },
    }

    const message = messages[language] || messages.ru

    const keyboard = {
      inline_keyboard: [
        [
          {
            text: "üá∫üáø O'zbekcha",
            callback_data: "lang_uz",
          },
          {
            text: "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
            callback_data: "lang_ru",
          },
        ],
        [
          {
            text: language === "uz" ? "‚¨ÖÔ∏è Orqaga" : "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data: "back_to_main",
          },
        ],
      ],
    }

    return await this.sendRequest("sendMessage", {
      chat_id: chatId,
      text: message.text,
      parse_mode: "Markdown",
      reply_markup: keyboard,
    })
  }

  // Send HTTP request to Telegram API
  async deleteMessage(chatId, messageId) {
    return await this.sendRequest("deleteMessage", {
      chat_id: chatId,
      message_id: messageId,
    })
  }

  // Send HTTP request to Telegram API
  async editMessage(chatId, messageId, text, replyMarkup = null) {
    return await this.sendRequest("editMessageText", {
      chat_id: chatId,
      message_id: messageId,
      text: text,
      parse_mode: "Markdown",
      reply_markup: replyMarkup,
    })
  }

  // Handle /start command
  async handleStart(chatId, user) {
    console.log(`User ${user.first_name} (${user.id}) started the bot`)

    // Detect user language
    const language = user.language_code === "uz" ? "uz" : "ru"

    return await this.sendWebAppButton(chatId, language)
  }

  // Handle callback queries (button presses)
  async handleCallbackQuery(callbackQuery) {
    const { id, data, from, message } = callbackQuery
    const language = from.language_code === "uz" ? "uz" : "ru"
    const chatId = message.chat.id
    const messageId = message.message_id

    await this.deleteMessage(chatId, messageId)

    let responseText = ""
    let shouldSendNewMessage = true

    switch (data) {
      case "menu":
        await this.sendMenu(chatId, language)
        shouldSendNewMessage = false
        break

      case "language":
        await this.sendLanguageMenu(chatId, language)
        shouldSendNewMessage = false
        break

      case "lang_uz":
        await this.sendWebAppButton(chatId, "uz")
        shouldSendNewMessage = false
        break

      case "lang_ru":
        await this.sendWebAppButton(chatId, "ru")
        shouldSendNewMessage = false
        break

      case "back_to_main":
        await this.sendWebAppButton(chatId, language)
        shouldSendNewMessage = false
        break

      case "categories":
        responseText =
          language === "uz"
            ? `üè∑Ô∏è *Kategoriyalar*

‚Ä¢ üè† Uy jihozlari
‚Ä¢ üß∏ Bolalar o'yinchoqlari  
‚Ä¢ üç≥ Oshxona anjomlar
‚Ä¢ üì± Elektronika
‚Ä¢ üë∂ Bolalar mahsulotlari
‚Ä¢ üõèÔ∏è Mebel va dekor

Barcha mahsulotlarni ko'rish uchun ilovani oching!`
            : `üè∑Ô∏è *–ö–∞—Ç–µ–≥–æ—Ä–∏–∏*

‚Ä¢ üè† –ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
‚Ä¢ üß∏ –î–µ—Ç—Å–∫–∏–µ –∏–≥—Ä—É—à–∫–∏
‚Ä¢ üç≥ –ö—É—Ö–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏
‚Ä¢ üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞
‚Ä¢ üë∂ –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π
‚Ä¢ üõèÔ∏è –ú–µ–±–µ–ª—å –∏ –¥–µ–∫–æ—Ä

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã!`
        break

      case "popular":
        responseText =
          language === "uz"
            ? `‚≠ê *Mashhur mahsulotlar*

‚Ä¢ Samsung kir yuvish mashinasi
‚Ä¢ LEGO konstruktor to'plami
‚Ä¢ Philips blender
‚Ä¢ ASUS noutbuk
‚Ä¢ Bolalar velosipedi

Batafsil ma'lumot uchun ilovani oching!`
            : `‚≠ê *–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã*

‚Ä¢ –°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ Samsung
‚Ä¢ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä LEGO
‚Ä¢ –ë–ª–µ–Ω–¥–µ—Ä Philips  
‚Ä¢ –ù–æ—É—Ç–±—É–∫ ASUS
‚Ä¢ –î–µ—Ç—Å–∫–∏–π –≤–µ–ª–æ—Å–∏–ø–µ–¥

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!`
        break

      case "new_products":
        responseText =
          language === "uz"
            ? `üÜï *Yangi mahsulotlar*

‚Ä¢ iPhone 15 Pro Max
‚Ä¢ Dyson changyutgich
‚Ä¢ Bosch toster
‚Ä¢ Sony quloqchin
‚Ä¢ Bolalar kitoblari to'plami

Yangi mahsulotlarni ilovada ko'ring!`
            : `üÜï *–ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã*

‚Ä¢ iPhone 15 Pro Max
‚Ä¢ –ü—ã–ª–µ—Å–æ—Å Dyson
‚Ä¢ –¢–æ—Å—Ç–µ—Ä Bosch
‚Ä¢ –ù–∞—É—à–Ω–∏–∫–∏ Sony
‚Ä¢ –ù–∞–±–æ—Ä –¥–µ—Ç—Å–∫–∏—Ö –∫–Ω–∏–≥

–°–º–æ—Ç—Ä–∏—Ç–µ –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!`
        break

      case "discounts":
        responseText =
          language === "uz"
            ? `üî• *Chegirmalar*

‚Ä¢ Dyson changyutgich - 16% chegirma
‚Ä¢ Samsung planshet - 20% chegirma
‚Ä¢ Oshxona to'plami - 15% chegirma
‚Ä¢ Bolalar o'yinchoqlari - 25% chegirma

Barcha chegirmalarni ilovada ko'ring!`
            : `üî• *–°–∫–∏–¥–∫–∏*

‚Ä¢ –ü—ã–ª–µ—Å–æ—Å Dyson - —Å–∫–∏–¥–∫–∞ 16%
‚Ä¢ –ü–ª–∞–Ω—à–µ—Ç Samsung - —Å–∫–∏–¥–∫–∞ 20%
‚Ä¢ –ö—É—Ö–æ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä - —Å–∫–∏–¥–∫–∞ 15%
‚Ä¢ –î–µ—Ç—Å–∫–∏–µ –∏–≥—Ä—É—à–∫–∏ - —Å–∫–∏–¥–∫–∞ 25%

–í—Å–µ —Å–∫–∏–¥–∫–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!`
        break

      case "contact":
        responseText =
          language === "uz"
            ? `üìû *Aloqa ma'lumotlari*

üì± Telefon: +998 90 123 45 67
üìß Email: info@homeshop.uz
üåê Sayt: shop.homeshop.uz
üìç Manzil: Toshkent, Chilonzor tumani

üïê Ish vaqti: 
Dushanba-Yakshanba: 9:00 - 22:00

üí¨ Savollaringiz bo'lsa, bizga murojaat qiling!`
            : `üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*

üì± –¢–µ–ª–µ—Ñ–æ–Ω: +998 90 123 45 67
üìß Email: info@homeshop.uz
üåê –°–∞–π—Ç: shop.homeshop.uz
üìç –ê–¥—Ä–µ—Å: –¢–∞—à–∫–µ–Ω—Ç, –ß–∏–ª–∞–Ω–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω

üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:
–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 9:00 - 22:00

üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º!`
        break

      case "about":
        responseText =
          language === "uz"
            ? `‚ÑπÔ∏è *HomeShop haqida*

Biz 2024-yilda tashkil etilgan zamonaviy onlayn do'konmiz. 

üéØ *Bizning maqsadimiz:*
Mijozlarimizga sifatli mahsulotlar va mukammal xizmat ko'rsatish

‚ú® *Bizning afzalliklarimiz:*
‚Ä¢ Keng mahsulot assortimenti
‚Ä¢ Tez va ishonchli yetkazib berish
‚Ä¢ Qulay narxlar va chegirmalar
‚Ä¢ 24/7 mijozlar xizmati
‚Ä¢ Kafolat va sifat nazorati

üöÄ Bizning Telegram Mini App orqali xarid qilish oson va qulay!`
            : `‚ÑπÔ∏è *–û HomeShop*

–ú—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –≤ 2024 –≥–æ–¥—É.

üéØ *–ù–∞—à–∞ —Ü–µ–ª—å:*
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å

‚ú® *–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*
‚Ä¢ –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏
‚Ä¢ –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 24/7
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞

üöÄ –ü–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–µ Telegram Mini App –ø—Ä–æ—Å—Ç—ã –∏ —É–¥–æ–±–Ω—ã!`
        break

      default:
        responseText = language === "uz" ? "Noma'lum buyruq" : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
    }

    // Answer callback query
    await this.sendRequest("answerCallbackQuery", {
      callback_query_id: id,
      text: language === "uz" ? "‚úÖ Bajarildi" : "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ",
    })

    if (shouldSendNewMessage && responseText) {
      const backButton = {
        inline_keyboard: [
          [
            {
              text: language === "uz" ? "‚¨ÖÔ∏è Orqaga" : "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
              callback_data: "back_to_main",
            },
            {
              text: language === "uz" ? "üõçÔ∏è Do'konni ochish" : "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
              web_app: {
                url: WEB_APP_URL,
              },
            },
          ],
        ],
      }

      return await this.sendRequest("sendMessage", {
        chat_id: chatId,
        text: responseText,
        parse_mode: "Markdown",
        reply_markup: backButton,
      })
    }
  }

  // Handle regular messages
  async handleMessage(message) {
    const { chat, from, text } = message

    if (text === "/start") {
      return await this.handleStart(chat.id, from)
    }

    // Handle other commands
    const language = from.language_code === "uz" ? "uz" : "ru"

    const helpText =
      language === "uz"
        ? `ü§ñ Mini Shop Bot\n\nMavjud buyruqlar:\n/start - Botni ishga tushirish\n\nMahsulotlarni ko'rish uchun "Mini Shop ni ochish" tugmasini bosing!`
        : `ü§ñ Mini Shop Bot\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å Mini Shop"!`

    return await this.sendRequest("sendMessage", {
      chat_id: chat.id,
      text: helpText,
      parse_mode: "Markdown",
    })
  }

  // Process incoming updates
  async processUpdate(update) {
    try {
      if (update.message) {
        await this.handleMessage(update.message)
      } else if (update.callback_query) {
        await this.handleCallbackQuery(update.callback_query)
      }
    } catch (error) {
      console.error("Error processing update:", error)
    }
  }

  // Set webhook for production
  async setWebhook(webhookUrl) {
    const result = await this.sendRequest("setWebhook", {
      url: webhookUrl,
      allowed_updates: ["message", "callback_query"],
    })
    console.log("Webhook set:", result)
    return result
  }

  // Get bot info
  async getBotInfo() {
    const result = await this.sendRequest("getMe")
    console.log("Bot info:", result)
    return result
  }

  // Start polling for development
  async startPolling() {
    console.log("Starting bot polling...")
    let offset = 0

    while (true) {
      try {
        const updates = await this.sendRequest("getUpdates", {
          offset: offset,
          timeout: 30,
        })

        if (updates && updates.ok && updates.result.length > 0) {
          for (const update of updates.result) {
            await this.processUpdate(update)
            offset = update.update_id + 1
          }
        }
      } catch (error) {
        console.error("Polling error:", error)
        await new Promise((resolve) => setTimeout(resolve, 5000))
      }
    }
  }
}

// Initialize and start bot
async function main() {
  if (!TELEGRAM_BOT_TOKEN || TELEGRAM_BOT_TOKEN === "YOUR_BOT_TOKEN_HERE") {
    console.error("Please set TELEGRAM_BOT_TOKEN environment variable")
    console.log("Get your bot token from @BotFather on Telegram")
    return
  }

  const bot = new MiniShopBot(TELEGRAM_BOT_TOKEN)

  // Get bot info
  await bot.getBotInfo()

  // Start polling (for development)
  // For production, use webhook instead
  if (process.env.NODE_ENV === "production") {
    console.log("Production mode - set up webhook manually")
    // await bot.setWebhook('https://your-domain.com/webhook')
  } else {
    await bot.startPolling()
  }
}

// Export for use in other files
if (typeof module !== "undefined" && module.exports) {
  module.exports = { MiniShopBot }
}

// Run if called directly
if (typeof require !== "undefined" && require.main === module) {
  main().catch(console.error)
}
